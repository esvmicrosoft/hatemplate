{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmname": {
      "type": "string",
      "defaultValue": "node"
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "[toLower(format('{0}-{1}', parameters('vmName'), uniqueString(resourceGroup().id, parameters('vmName'))))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },

    "publisher": {
      "type": "string",
      "defaultValue": "SUSE"
    },

    "offer":  {
      "type": "string",
      "defaultValue": "sles-sap-15-sp4"
    },
    
    "sku": {
      "type": "string",
      "defaultValue": "gen2"
    },

    "image_version": {
      "type": "string",
      "defaultValue": "latest"
    },

    "nodes_customdata": {
      "type": "string",
      "defaultValue": "I2Nsb3VkLWNvbmZpZwo="
    },

    "jumphost_customdata": {
      "type": "string",
      "defaultValue": "I2Nsb3VkLWNvbmZpZwo="
    },


    "jump_publisher": {
      "type": "string",
      "defaultValue": "Canonical"
    },

    "jump_offer":  {
      "type": "string",
      "defaultValue": "0001-com-ubuntu-server-jammy"
    },
    
    "jump_sku": {
      "type": "string",
      "defaultValue": "22_04-lts-gen2"
    },

    "jump_image_version": {
      "type": "string",
      "defaultValue": "latest"
    },

    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },


    "publicIpName": {
      "type": "string",
      "defaultValue": "myPublicIP",
      "metadata": {
        "description": "Name for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIPAllocationMethod": {
      "type": "string",
      "defaultValue": "Static",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Allocation method for the Public IP used to access the Virtual Machine."
      }
    },

    "publicIpSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "SKU for the Public IP used to access the Virtual Machine."
      }
    },

    "privkey":  {
      "type": "string"
    },

    "pubkey":  {
      "type": "string"
    },


    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },

    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "storagePrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 3,
      "defaultValue": "esv"
    },

    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Specifies the Azure AD tenant ID that should be used for authenticating requests to the key vault"
      }
    },

    "securityType": {
      "type": "string",
      "defaultValue": "TrustedLaunch",
      "allowedValues": [
        "Standard",
        "TrustedLaunch"
      ],
      "metadata": {
        "description": "Security Type of the Virtual Machine."
      }
    }

  }, 


  "variables": {
    "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]",
    "uniqueName": "[toLower(concat(parameters('storagePrefix'), 'diag', uniqueString(resourceGroup().id)))]",
    "numberOfNodes": 2,

    "virtualNetworkName": "myvnet",
    "addressPrefix": "10.0.0.0/16",

    "subnetName": "default",
    "subnetPrefix": "10.0.0.0/24",

    "loadBalancerName": "ilb",
    "nicName": "myVMNic",

    "networkSecurityGroupName": "default-NSG",

    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "securityProfileJson": {
      "uefiSettings": {
        "secureBootEnabled": true,
        "vTpmEnabled": true
      },
      "securityType": "[parameters('securityType')]"
    }
  },

  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name":  "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "sku": {
         "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
         "supportsHttpsTrafficOnly": true
      }
    },


    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-05-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-22",
            "properties": {
              "priority": 100,
              "access": "Allow",
              "direction": "Inbound", 
              "destinationPortRange": "22",
              "protocol": "Tcp", 
              "sourcePortRange": "*",
              "sourceAddressPrefix": "74.124.178.154/32", 
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-05-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "natGateway": {
                "id": "[resourceId('Microsoft.Network/natGateways','natgateway')]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/natGateways','natgateway')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ]
    },


    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-05-01",
      "name": "[parameters('publicIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('publicIpSku')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-05-01",
      "name": "[concat('jumphost_',variables('nicName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIpName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-03-01",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },

        "osProfile": {
          "computerName": "[variables('uniqueName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"

        },


        "storageProfile": { 
          "imageReference": { 
            "publisher":      "[parameters('jump_publisher')]",
            "offer":          "[parameters('jump_offer')]",
            "sku":            "[parameters('jump_sku')]",
            "version":        "[parameters('jump_image_version')]"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('jumphost_',variables('nicName')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('uniqueName')), '2022-05-01').primaryEndpoints.blob]"
          }
        },
        "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), null())]",
        "userData": "[parameters('jumphost_customdata')]"

      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat('jumphost_',variables('nicName')))]",
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}{1}',parameters('vmname'),0))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('uniqueName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueName'))]"
      ]
    },


    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-05-01",
      "name": "natgw-ipaddress",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('publicIpSku')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('uniqueName')]"
        }
      }
    },

    {
      "type": "Microsoft.Network/natGateways",
      "apiVersion": "2022-07-01",
      "name":  "natgateway",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "idleTimeoutInMinutes": 10,
        "publicIpAddresses": [ 
          {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses','natgw-ipaddress')]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses','natgw-ipaddress')]"
      ]
    },

    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2022-07-01",
      "name":  "custom_udr_table",
      "location": "[parameters('location')]",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "type": "Microsoft.Network/routeTables/routes",
            "name": "tothenatgw",
            "properties": {
              "addressPrefix": "[format('{0}/32',reference(resourceId('Microsoft.Network/publicIPAddresses','natgw-ipaddress'),'2019-02-01', 'Full').properties.ipAddress)]",
              "nextHopType": "Internet"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses','natgw-ipaddress')]"
      ]
    },


    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-05-01",
      "name": "[concat(variables('nicName'),copyIndex())]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), 'BackendPool1')]"
                }
              ]
            }
          }
        ]
      },
      "copy": {
        "name": "CopyOfNics",
        "count": "[variables('numberOfNodes')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },

    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2021-05-01",
      "name": "[variables('loadBalancerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              },
              "privateIPAddress": "10.0.0.254",
              "privateIPAllocationMethod": "Static"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancerName'), 'LoadBalancerFrontend')]"
              },
              "frontendPort": 0,
              "backendPort": 0,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 15,
              "protocol": "All",
              "loadDistribution": "Default",
              "disableOutboundSnat": false,
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), 'BackendPool1')]"
              },
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancerName'), 'lbprobe')]"
              }
            },
            "name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },


    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2022-11-01",
      "name": "hacluster-avset",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },


    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}{1}',parameters('vmName'),copyIndex())]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "availabilitySet": {
          "id":  "[resourceId('Microsoft.Compute/availabilitySets', 'hacluster-avset')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },

        "osProfile": {
          "computerName": "[concat(parameters('vmName'),copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"

        }, 


        "storageProfile": { 
          "imageReference": { 
            "publisher":      "[parameters('publisher')]",
            "offer":          "[parameters('offer')]",
            "sku":            "[parameters('sku')]",
            "version":        "[parameters('image_version')]"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "sbd0",
              "createOption": "Attach",
              "caching": "None",
              "writeAcceleratorEnabled": false,
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks','sbd0')]"
              },
              "deleteOption": "Detach",
              "toBeDetached": false
            },
            {
              "lun": 1,
              "name": "[concat('dataDisk', copyIndex())]",
              "createOption": "Attach",
              "caching": "None",
              "writeAcceleratorEnabled": false,
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks',concat('dataDisk',copyIndex()))]"
              },
              "deleteOption": "Detach",
              "toBeDetached": false
            }
          ]
        }, 
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),copyIndex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('uniqueName')), '2022-05-01').primaryEndpoints.blob]"
          }
        },
        "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), null())]",
        "userData": "[parameters('nodes_customdata')]"
      },
      "copy": {
        "name": "copyOfNodes",
        "count": "[variables('numberOfNodes')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyIndex()))]",
        "[resourceId('Microsoft.Compute/disks','sbd0')]",
        "[resourceId('Microsoft.Compute/disks',concat('dataDisk',copyIndex()))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueName'))]"
      ]
    },

    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "properties": {
        "accessPolicies": [
        ],
        "createMode": "default",
        "enabledForDeployment":        true,
        "enabledForTemplateDeploymen": true,
        "enableSoftDelete":            false,
        "enableRbacAuthorization":     false,
        "sku": {
          "family": "A",
          "name":   "standard"
        },
        "tenantId": "[parameters('tenantId')]"
      },
      "resources": [
        {
          "type": "secrets",
          "apiVersion": "2022-07-01",
          "name": "serviceip",
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value":  "10.0.0.254"
          },
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('uniqueName'))]"
          ]
        },

        {
          "type": "secrets",
          "apiVersion": "2022-07-01",
          "name": "resourcegroup",
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value":  "[resourceGroup().name]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('uniqueName'))]"
          ]
        },
    
        {
          "type": "secrets",
          "apiVersion": "2022-07-01",
          "name": "subscriptionid",
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value":  "[subscription().subscriptionId]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('uniqueName'))]"
          ]
        },
        {
          "type": "secrets",
          "apiVersion": "2022-07-01",
          "name": "firstnode",
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value":  "node0"
          },
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('uniqueName'))]"
          ]
        },
    
        {
          "type": "secrets",
          "apiVersion": "2022-07-01",
          "name": "machineslist",
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value":  "node0,node1"
          },
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('uniqueName'))]"
          ]
        },
    
        {
          "type": "secrets",
          "apiVersion": "2022-07-01",
          "name": "privkey",
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value":  "[parameters('privkey')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('uniqueName'))]"
          ]
        },
        {
          "type": "secrets",
          "apiVersion": "2022-07-01",
          "name": "pubkey",
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value":  "[parameters('pubkey')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('uniqueName'))]"
          ]
        }
    
      ]
    },

    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}',variables('uniqueName'),'add')]",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Compute/virtualMachines',variables('uniqueName')), '2023-03-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [],
              "secrets": [
                "Get",
                "List",
                "Set"
              ],
              "certificates": [],
              "storage": []
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('uniqueName'))]",
        "[resourceId('Microsoft.Compute/virtualMachines',variables('uniqueName'))]"
      ]
    },



    {
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2022-07-02",
      "name": "sbd0",
      "location": "[parameters('location')]",
      "sku": {
        "name": "StandardSSD_LRS",
        "tier": "Standard"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": 4,
        "maxShares": 2,
        "networkAccessPolicy": "AllowAll",
        "publicNetworkAccess": "Enabled"
      }
    },

    {
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2022-07-02",
      "name": "[concat('dataDisk',copyIndex())]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "StandardSSD_LRS",
        "tier": "Standard"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": 4,
        "maxShares": 1,
        "networkAccessPolicy": "AllowAll",
        "publicNetworkAccess": "Enabled"
      },
      "copy": {
        "name": "CopyOfDisks",
        "count": "[variables('numberOfNodes')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks','sbd0')]"
      ]
    },

    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(concat(variables('roleDefinitionId'),resourceGroup().id,format('{0}',copyIndex())))]",
      "properties": {
        "roleDefinitionId": "[variables('roleDefinitionId')]",
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines',format('{0}{1}',parameters('vmname'),copyIndex())), '2023-03-01', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "copy": {
        "name": "CopyOfRoles",
        "count": "[variables('numberOfNodes')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('uniqueName'))]",
        "[resourceId('Microsoft.Compute/virtualMachines',format('{0}{1}',parameters('vmname'),copyIndex()))]"
      ]
    }
  ]
}
